<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2025.3/project-config.xsd">
  <name>Build and push</name>
  <description />
  <settings>
    <disabled-settings>
      <setting-ref ref="Pull_and_run" />
    </disabled-settings>
    <build-runners>
      <runner id="DockerCommand_2" name="" type="DockerCommand">
        <parameters>
          <param name="command.args" value="--pull" />
          <param name="docker.command.type" value="build" />
          <param name="docker.image.namesAndTags" value="dkrupkinacontainerregistry.azurecr.io/build:new" />
          <param name="docker.push.remove.image" value="true" />
          <param name="dockerfile.path" value="Dockerfile" />
          <param name="dockerfile.source" value="PATH" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="DockerCommand_3" name="" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="push" />
          <param name="docker.image.namesAndTags" value="dkrupkinacontainerregistry.azurecr.io/build:new" />
          <param name="docker.push.remove.image" value="true" />
          <param name="dockerfile.source" value="PATH" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="DockerCommand_1" name="" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="build" />
          <param name="docker.image.namesAndTags" value="dkrupkinacontainerregistry.azurecr.io/app:latest" />
          <param name="docker.push.remove.image" value="true" />
          <param name="dockerImage.platform" value="linux" />
          <param name="dockerfile.content"><![CDATA[FROM dkrupkinacontainerregistry.azurecr.io/build:new
WORKDIR /app
COPY . .
RUN ls]]></param>
          <param name="dockerfile.source" value="CONTENT" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="DockerCommand" name="" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="push" />
          <param name="docker.image.namesAndTags" value="dkrupkinacontainerregistry.azurecr.io/app:latest" />
          <param name="docker.push.remove.image" value="true" />
          <param name="dockerImage.platform" value="linux" />
          <param name="dockerfile.path" value="Dockerfile" />
          <param name="dockerfile.source" value="PATH" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="Pull_and_run" name="Pull and run" type="simpleRunner">
        <parameters>
          <param name="plugin.docker.imageId" value="dkrupkinacontainerregistry.azurecr.io/app:latest" />
          <param name="plugin.docker.imagePlatform" value="linux" />
          <param name="plugin.docker.pull.enabled" value="true" />
          <param name="script.content" value="ls /" />
          <param name="teamcity.kubernetes.executor.pull.policy" value="IfNotPresent" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="DslReadOnlySampleDockerfile_HttpsGithubComDariaKrupSampleDockerfileGitRefsHeadsMain" />
    </vcs-settings>
    <build-triggers>
      <build-trigger id="TRIGGER_1" type="vcsTrigger">
        <parameters>
          <param name="branchFilter" value="+:*" />
          <param name="enableQueueOptimization" value="true" />
          <param name="quietPeriodMode" value="DO_NOT_USE" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <build-extensions>
      <extension id="BUILD_EXT_1" type="perfmon">
        <parameters>
          <param name="teamcity.perfmon.feature.enabled" value="true" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_2" type="DockerSupport">
        <parameters>
          <param name="cleanupPushed" value="true" />
          <param name="login2registry" value="PROJECT_EXT_132" />
          <param name="loginCheckbox" value="on" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_3" type="RunInDocker">
        <parameters>
          <param name="plugin.docker.imageId" value="ubuntu:latest" />
        </parameters>
      </extension>
    </build-extensions>
  </settings>
</build-type>

